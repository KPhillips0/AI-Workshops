# -*- coding: utf-8 -*-
"""Using Keras/TensorFlow - Machine Learning

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/116zKJukxYQnQu9n0P060b8u2NEiT1123
"""

import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
import numpy as np

(X_train, y_train) , (X_test, y_test) = keras.datasets.mnist.load_data()
print(X_test[0])
X_train = keras.utils.normalize(X_train, axis=1)
X_test = keras.utils.normalize(X_test, axis =1)

sample_index = 50
print("Sample %d in training dataset: " % sample_index)
plt.imshow(X_train[sample_index])
plt.show()
print("sample label: %d" % y_train[sample_index])

model = keras.models.Sequential()
model.add(keras.layers.Flatten())
model.add(keras.layers.Dense(units = 256, activation=tf.nn.relu))
model.add(keras.layers.Dense(units = 128, activation=tf.nn.relu))
model.add(keras.layers.Dense(10, activation=tf.nn.softmax))

model.compile(optimizer= 'adam' , loss= 'sparse_categorical_crossentropy',
              metrics = ['accuracy'])
model.fit(X_train, y_train, epochs=4)

INDEX = 9999
print('sample %d in testing dataset.' % INDEX)
plt.imshow(X_test[INDEX])
plt.show()
prediction = model.predict(np.array([X_test[INDEX]]))
print('prediction %d' % np.argmax(prediction))